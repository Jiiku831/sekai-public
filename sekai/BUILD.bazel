load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "array_size",
    srcs = ["array_size.cc"],
    hdrs = ["array_size.h"],
    deps = [
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
    ],
)

cc_test(
    name = "array_size_test",
    srcs = ["array_size_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":array_size",
        "//testing:test_main",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "bitset",
    hdrs = ["bitset.h"],
    deps = [
        "//sekai/db/proto:enums_cc_proto",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:str_format",
        "@protobuf",
    ],
)

cc_test(
    name = "bitset_test",
    srcs = ["bitset_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":array_size",
        ":bitset",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "bonus_limit",
    hdrs = ["bonus_limit.h"],
)

cc_test(
    name = "bonus_limit_test",
    srcs = ["bonus_limit_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":bonus_limit",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "challenge_live",
    srcs = ["challenge_live.cc"],
    hdrs = ["challenge_live.h"],
    deps = [
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_library(
    name = "challenge_live_estimator",
    srcs = ["challenge_live_estimator.cc"],
    hdrs = ["challenge_live_estimator.h"],
    deps = [
        ":estimator_base",
        ":team",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "@abseil-cpp//absl/container:flat_hash_set",
    ],
    alwayslink = True,
)

cc_library(
    name = "card",
    srcs = ["card.cc"],
    hdrs = ["card.h"],
    deps = [
        ":array_size",
        ":bitset",
        ":card_base",
        ":character",
        ":event_bonus",
        ":profile_bonus",
        ":skill",
        ":unit_count_base",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:card_cc_proto",
        "//sekai/proto:card_state_cc_proto",
        "@abseil-cpp//absl/base:nullability",
        "@abseil-cpp//absl/strings:str_format",
        "@eigen",
    ],
)

cc_library(
    name = "card_base",
    srcs = ["card_base.cc"],
    hdrs = ["card_base.h"],
    deps = [
        ":bitset",
        ":character",
        "//sekai/db/proto:all",
        "//sekai/proto:card_state_cc_proto",
        "@abseil-cpp//absl/base:core_headers",
        "@eigen",
    ],
)

cc_test(
    name = "card_test",
    srcs = ["card_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":bitset",
        ":card",
        ":event_bonus",
        ":profile",
        ":unit_count",
        "//sekai/db:master_db",
        "//sekai/db/proto:card_cc_proto",
        "//sekai/proto:card_state_cc_proto",
        "//sekai/proto:profile_cc_proto",
        "//testing:test_main",
        "//testing:util",
        "@abseil-cpp//absl/base:nullability",
        "@abseil-cpp//absl/container:flat_hash_map",
        "@abseil-cpp//absl/log",
        "@eigen",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "character",
    srcs = ["character.cc"],
    hdrs = ["character.h"],
    deps = [
        ":bitset",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
    ],
)

cc_test(
    name = "character_test",
    srcs = ["character_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":character",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "combinations",
    hdrs = ["combinations.h"],
    deps = [
        "@abseil-cpp//absl/base:nullability",
        "@abseil-cpp//absl/functional:any_invocable",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_library(
    name = "config",
    srcs = ["config.cc"],
    hdrs = ["config.h"],
    deps = [
        ":parse_proto",
        "//sekai/proto:world_bloom_cc_proto",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/log:absl_check",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "config_test",
    srcs = ["config_test.cc"],
    deps = [
        ":config",
        "//testing:test_main",
        "@abseil-cpp//absl/log",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "estimator",
    srcs = ["estimator.cc"],
    hdrs = ["estimator.h"],
    deps = [
        ":config",
        ":estimator_base",
        ":event_bonus",
        ":profile",
        ":team",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "@abseil-cpp//absl/base:nullability",
        "@abseil-cpp//absl/log:absl_check",
        "@eigen",
    ],
)

cc_test(
    name = "estimator_test",
    srcs = ["estimator_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":challenge_live_estimator",
        ":estimator",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "@abseil-cpp//absl/base:nullability",
        "@eigen",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "estimator_base",
    hdrs = ["estimator_base.h"],
    deps = [
        ":bitset",
        ":event_bonus",
        ":profile",
    ],
)

cc_library(
    name = "event_bonus",
    srcs = ["event_bonus.cc"],
    hdrs = ["event_bonus.h"],
    deps = [
        ":array_size",
        ":character",
        ":proto_util",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:event_bonus_cc_proto",
        "//sekai/proto:event_id_cc_proto",
        "@abseil-cpp//absl/base:nullability",
        "@abseil-cpp//absl/flags:flag",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_test(
    name = "event_bonus_test",
    srcs = ["event_bonus_test.cc"],
    data = [
        "testdata/event_bonus_112.textproto",
        "testdata/event_bonus_117.textproto",
        "testdata/support_event_bonus_112_1.textproto",
        "testdata/support_event_bonus_140_1.textproto",
        "testdata/support_event_bonus_vs_v2.textproto",
        "//data:flat-db",
    ],
    deps = [
        ":card",
        ":event_bonus",
        "//sekai/db:master_db",
        "//sekai/proto:card_state_cc_proto",
        "//sekai/proto:event_bonus_cc_proto",
        "//testing:test_main",
        "//testing:util",
        "@abseil-cpp//absl/log",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "file_util",
    srcs = ["file_util.cc"],
    hdrs = ["file_util.h"],
    deps = [
        ":config",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

cc_library(
    name = "fixtures",
    srcs = ["fixtures.cc"],
    hdrs = ["fixtures.h"],
    deps = [
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
    ],
)

cc_library(
    name = "max_character_rank",
    srcs = ["max_character_rank.cc"],
    hdrs = ["max_character_rank.h"],
    deps = [
        ":array_size",
        ":challenge_live",
        ":character",
        ":config",
        ":version",
        "//sekai/db:master_db",
        "//sekai/proto:max_character_rank_cc_proto",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_test(
    name = "max_character_rank_test",
    srcs = ["max_character_rank_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":array_size",
        ":max_character_rank",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "max_level",
    hdrs = ["max_level.h"],
)

cc_test(
    name = "max_level_test",
    srcs = ["max_level_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":max_level",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "parking",
    srcs = ["parking.cc"],
    hdrs = ["parking.h"],
    deps = [
        ":config",
        ":event_bonus",
        ":profile",
        ":team",
        "//base:util",
        "@abseil-cpp//absl/container:btree",
        "@abseil-cpp//absl/log:absl_check",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
    ],
)

cc_test(
    name = "parking_test",
    srcs = ["parking_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":challenge_live_estimator",
        ":parking",
        "//sekai/db:master_db",
        "//testing:test_main",
        "//testing:util",
        "@abseil-cpp//absl/log",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "parse_proto",
    hdrs = ["parse_proto.h"],
    deps = [
        "//base",
        "@abseil-cpp//absl/log:absl_check",
        "@protobuf",
    ],
)

cc_library(
    name = "points",
    srcs = ["points.cc"],
    hdrs = ["points.h"],
    deps = [
        ":config",
    ],
)

cc_test(
    name = "points_test",
    srcs = ["points_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":points",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "profile",
    srcs = ["profile.cc"],
    hdrs = ["profile.h"],
    deps = [
        ":array_size",
        ":bonus_limit",
        ":card",
        ":character",
        ":fixtures",
        ":max_level",
        ":profile_bonus",
        "//base:util",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:profile_cc_proto",
        "//sekai/team_builder:pool_utils",
        "@abseil-cpp//absl/log:absl_check",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:str_format",
    ],
)

cc_test(
    name = "profile_test",
    srcs = ["profile_test.cc"],
    data = [
        "//data:flat-db",
        "//data:profile/cards",
        "//data:profile/cards_v2",
    ],
    deps = [
        ":array_size",
        ":profile",
        ":unit_count",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "profile_bonus",
    hdrs = ["profile_bonus.h"],
    deps = [
        "@abseil-cpp//absl/strings:str_format",
    ],
)

cc_library(
    name = "proto_util",
    hdrs = ["proto_util.h"],
    deps = [
        ":file_util",
        ":parse_proto",
        "//base",
        "@abseil-cpp//absl/log:absl_check",
        "@protobuf",
    ],
)

cc_library(
    name = "ranges_util",
    hdrs = ["ranges_util.h"],
    deps = [
        "//base:util",
        "@abseil-cpp//absl/base",
        "@abseil-cpp//absl/log",
        "@abseil-cpp//absl/status:statusor",
    ],
)

cc_library(
    name = "server",
    srcs = ["server.cc"],
    hdrs = ["server.h"],
    deps = [
        "//sekai/db/proto:server_cc_proto",
        "@abseil-cpp//absl/log:absl_check",
        "@sekai-master-db//:server_id",
    ],
)

cc_test(
    name = "server_test",
    srcs = ["server_test.cc"],
    deps = [
        ":server",
        "//sekai/db/proto:server_cc_proto",
        "//testing:test_main",
        "//testing:util",
        "@abseil-cpp//absl/log",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "skill",
    srcs = ["skill.cc"],
    hdrs = ["skill.h"],
    deps = [
        ":bitset",
        ":config",
        ":unit_count_base",
        "//sekai/db/proto:all",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_test(
    name = "skill_test",
    srcs = ["skill_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":card",
        ":skill",
        ":unit_count",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "team",
    srcs = ["team.cc"],
    hdrs = ["team.h"],
    deps = [
        ":bitset",
        ":card",
        ":estimator_base",
        ":event_bonus",
        ":points",
        ":profile",
        ":unit_count",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:team_cc_proto",
        "//sekai/proto:world_bloom_cc_proto",
        "//sekai/team_builder:constraints",
        "@abseil-cpp//absl/strings:str_format",
        "@eigen",
    ],
)

cc_test(
    name = "team_benchmark",
    srcs = ["team_benchmark.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":card",
        ":challenge_live_estimator",
        ":event_bonus",
        ":profile",
        ":team",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:profile_cc_proto",
        "//testing:util",
        "@google_benchmark//:benchmark_main",
    ],
)

cc_test(
    name = "team_test",
    srcs = ["team_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":bitset",
        ":card",
        ":challenge_live_estimator",
        ":profile",
        ":team",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//sekai/proto:profile_cc_proto",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "unit_count",
    srcs = ["unit_count.cc"],
    hdrs = ["unit_count.h"],
    deps = [
        ":bitset",
        ":card",
        ":config",
        ":unit_count_base",
        "//sekai/db/proto:all",
    ],
)

cc_library(
    name = "unit_count_base",
    srcs = ["unit_count_base.cc"],
    hdrs = ["unit_count_base.h"],
    deps = [
        ":bitset",
        ":config",
        "//sekai/db/proto:all",
        "@abseil-cpp//absl/log:absl_check",
    ],
)

cc_test(
    name = "unit_count_test",
    srcs = ["unit_count_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":unit_count",
        "//sekai/db:master_db",
        "//sekai/db/proto:all",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)

cc_library(
    name = "version",
    srcs = ["version.cc"],
    hdrs = ["version.h"],
    deps = [
        "//sekai/db:master_db",
        "@abseil-cpp//absl/log:absl_check",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/time",
    ],
)

cc_test(
    name = "version_test",
    srcs = ["version_test.cc"],
    data = [
        "//data:flat-db",
    ],
    deps = [
        ":version",
        "//testing:test_main",
        "//testing:util",
        "@googletest//:gtest",
    ],
)
